#Notes:
#Ethan Dall
#11-8-17
#Learning the History of Computers

    Older computers were operated by switches causing data instruction to the computer input, that allowed no fault, if a mistake was made it ment a total reset. The first generation of computers were called 1GL or First Generation computers, using the binary language. Though it was a short lived generation that was ment to be the foundation of more easily used code, it allowed for decimal and hexidecimal coding, this is better known as 2GL or Assembly Language Programming. After having the building blocks allowing to let the user input a string of code that would be translated into hexidecimal that in turn translated into binary or decimal, allowing the computer to read it so that it can output what the user inputed. Memory address was accessed when the user put a specific string of input, though this wasnt as user friendly that programmers wanted, allowing the 3rd Generation of programs to develop. This means PHP, C++, Python, HTML, Java, VES, C# and many more. The program starts with the Source Code, the users input, conversion undergoes called the compiler outputing the machine code. The machine code is processed through a Linker that connected muliple machine codes and outputs the Final Program, this isnt the only extent of the process, some Source Code will have an Interpreter into machine code that will throw back into the Interpreter to gather information of machine code. This does cause the problem when sharing code, that will have to share the interpreter, making it more difficuly. Each programming language is used for specific use, like python with games and phone apps, java with websites along with HTML, and so on.
