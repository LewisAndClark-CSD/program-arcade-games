     
     Chapter 03 Worksheet

     
     
  1. What is missing from this code? (1 pt)
     
     temperature = float(input("Temperature: ")
     if temperature > 90:
         print("It is hot outside.")
     else:
         print("It is not hot out.")
     temperature = float(input("Temperature: "))
  2. Write a Python program that will take in a number from the user and print
     if it is positive, negative, or zero. Use a proper if/elif/else chain, don't
     just use three if statements.

     number = int(input('Enter a number: '))
     if number < 0:
          print(number, 'is negative.')
     elif number > 0:
          print(number, 'is positive.')
     else:
          print(number, 'is zero.')
          
  3. Write a Python program that will take in a number from a user and print
     out ``Success'' if it is greater than -10 and less than 10, inclusive. (1 pt)

     number = int(input('Enter a number: '))
     if -10 < number < 10 + 1:
          print('Success')
    
  4. This runs, but there is something wrong. What is it? (1 pt)
     
     user_input = input("A cherry is a: ")
     print("A. Dessert topping")
     print("B. Desert topping")
     if user_input.upper() == "A":
         print("Correct!")
     else:
         print("Incorrect.")
     The program also prints 'Correct!' when the user puts in a lowercase a.
  5. There are two things wrong with this code that tests if x is set to a
     positive value. One prevents it from running, and the other is subtle.
     Make sure the if statement works no matter what x is set to.
     Identify both issues. (2 pts)
     
     x == 4
     if x >= 0:
         print("x is positive.")
     else:
         print("x is not positive.")
     The first issue that doesn't allow it to run is 'x == 4', this needs to be replaced with 'x = 4' as it '==' doesn't define x as a variable. The 2nd issue is that the program does not allow the user to put in a number, and x is fixed at 4, so there will never be 'x is not positive.' as an outcome.
  6. What three things are wrong with the following code? (3 pts)
     
     x = input("Enter a number: ")
     if x = 3
         print("You entered 3")
     The first error I saw what 'if x = 3'. This needs to be 'if x = 3:' and the 2nd issue is that it actually needs to have a double '==' instead of just one equal sign ('if x == 3:'). The 3rd error is that the 3 needs to be in quotes, so that the program will recognize it, and print out the "You entered 3".
  7. There are four things wrong with this code. Identify all four issues. (4 pts)
     
     answer = input("What is the name of Dr. Bunsen Honeydew's assistant? ")
     if a = "Beaker":
         print("Correct!")
         else
         print("Incorrect! It is Beaker.")
     The first error is the if statement, the variable 'a' is not defined and needs to be changed to 'answer'. The 2nd and 3rd errors are in the else statement, as it cannot be indented like it is (needs to be aligned with if) and needs ':' next to it. Finally the 4th error is the equal sign in the if statement, it needs to be double ('==').
  8. This program doesn't work correctly. What is wrong? (1 pt)
     
     x = input("How are you today?")
     if x == "Happy" or "Glad":
         print("That is good to hear!")
     There is no else statement, so no matter what the user puts into the input statement, it will always print out "That is good to hear!". Also, there needs to be a space between 'today?' and the ending quotation mark for style purposes. 
  9. Look at the code below. Write you best guess here on what it will print.
     Next, run the code and see if you are correct.
     Clearly label your guess and the actual answer.
     Also, if this or any other example results in an error, make sure to
     state that an error occurred.
     While you don't need to write an explanation, make sure you understand
     why the computer prints what it does. Don't get caught flat-footed when
     you need to know later. (2 pts)
     
     x = 5
     y = x == 6
     z = x == 5
     print("x=", x)
     print("y=", y)
     print("z=", z)
     if y:
         print("Fizz")
     if z:
         print("Buzz")
     Guess: I do not think the coding will initally work because of the 'y = x == 6' and 'z = x == 5'.
     Answer: It prints out 'x= 5
                            y= False
                            z= True
                            Buzz'
 10. Look at the code below. Write you best guess on what it will print.
     Next, run the code and see if you are correct. (2 pts)
     
     x = 5
     y = 10
     z = 10
     print(x < y)
     print(y < z)
     print(x == 5)
     print(not x == 5)
     print(x != 5)
     print(not x != 5)
     print(x == "5")
     print(5 == x + 0.00000000001)
     print(x == 5 and y == 10)
     print(x == 5 and y == 5)
     print(x == 5 or y == 5)
     Guess: I think it will print out '5'.
     Answer: It prints out 'True
                            False
                            True
                            False
                            False
                            True
                            False
                            False
                            True
                            False
                            True'
                            
 11. Look at the code below. Write you best guess on what it will print.
     Next, run the code and see if you are correct. (2 pts)
     
     print("3" == "3")
     print(" 3" == "3")
     print(3 < 4)
     print(3 < 10)
     print("3" < "4")
     print("3" < "10")
     print( (2 == 2) == "True" )
     print( (2 == 2) == True )
     print(3 < "3")
     Guess: I think it will print 'True
                                   False
                                   True
                                   True
                                   True
                                   True
                                   True
                                   False'
    Answer: It printed out 'True
                            False
                            True
                            True
                            True
                            False
                            False
                            True
                            Traceback (most recent call last):
                              File "/home/jlyles/TestingProgram.py", line 9 in <module>
                                   print(3 < "3")
                            TyperError: unorderable types: int() < str()'

 12. What things are wrong with this section of code?
     The programmer wants to set the money variable according to
     the initial occupation the user selects. (1 pt)
     
     print("Welcome to Oregon Trail!")

     print("A. Banker")
     print("B. Carpenter")
     print("C. Farmer")

     user_input = input("What is your occupation?")

     if user_input = A:
         money = 100
     else if user_input = B:
         money = 70
     else if user_input = C:
         money = 50
The first thing I noticed before I did anything was the use of 'else if', instead of this the programmer needs to use 'elif'. Another error I noticed was the '=' in the first if statement, this again needs to be '=='. The same goes with the 'elif' statements. When I first tried to run the program, it told me that 'A' was not defined, and I assume it goes the same for the other answers, so the programmer needs to define the letters as their answers, so the program can run. (Also space between '?' and end quote) At the end whenever the program prints nothing, and does not tell the user how much money they receive due to their occupation, so the programmer must add that if they want the user to be able to see their amount of money.
     

     
